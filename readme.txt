ㅇlibraries

    - conda included libraries
    - openbb
    - pandas_ta : dataframe 이 ohlc 꼴로만 되있으면 알아서 해줌
    - TA-Lib -> pandas_ta 가 일정부분 wrapping 하는 목적으로 같이 설치 / 직접 쓰기 불편함
    - FinanceDataReader : 국내지수, 환율 등 간편하게 load
    - riskfolio : 위험지표 및 포트폴리오 최적화
       * option specific libraries : optionlab
    - cvxpy : convex optimization tool. scipy.optimize 보다 편함

ㅇ 추가 아이디어 -> 테스트 필요

---------------- 부분완료) 저가매수 고가매도 역발상 전략
    ㅁ 고점대비 n% 이상 하락/상승시 진입
    하락시)
    -3% 하락시 델타20/10짜리 근월물 콜레이쇼 / 0.5pt / -0.5pt
    -5% 하락시 델타30/15짜리 근월물 콜레이쇼 / 0.5pt / -1pt
    -3% 하락시 델타30/15짜리 목 위클리 콜데빗 / 프리의 2배 / 프리의 -0.25배
    (-3% 하락시 델타20짜리 목 위클리 콜매수 / 프리의 0.25배  / 프리의 -0.5배 => 데빗보다 손익변동성 커서 꼭 해야하나 싶지만... 손실은 데빗과 동일한데 급반등시 이익 수취 확실)
    상승시)
    -6% 상승시 델타40/20짜리 근월물 풋백스프레드 / 0.5pt / -1pt
    -(5% 상승시 델타30/15짜리 위클리 풋레이쇼 0.5pt / -1pt) -> 근본적으로 풋매도랑 다를바 없어서 급반락 연출시 조지는 게 문제

    ㅁ 정추세방향에서 일부 이탈시 정추세방향으로 매일마다 기계적으로 진입...?


ㅇ) 급락 직후 반등가능성이 더 높을경우 -> 스트랭글이 아닌 "jade lizard" 로 반등장서 이중으로 조지는 일 없게 하는 전략 보완해서 monthly/weekly strangle 테스트
    1) 급락 기준이? : 수익률? / 특정 기술적 지표 과매도권? / what?

ㅇ) 콜이 풋대비 너무 낮을때
    -> 일단 변동성 Skew 차트 만들기 : Skew 정도 기준으로 진입 청산 결정
    -> 풋 2개 매도 + 선물매도로 유사 수익 구조 구축하면서 풋 IV만 harvest
    -> 유사한 전략으로 Reversal 이 있음 (실제 해본 결과 Profile 이랑 상관없이 전적으로 콜풋 Skew 매매였음)

----------------- 완료) 매도전략 손절치고나서 반등포지셔닝 => 저가매수 고가매도로 퉁 치기

ㅇ) 상시 Laddering 해놓는 전략
    - BSH
        - 매도랑 동일월물로 / 델타수준 불문 / 행사가 -30짜리 매도 -35짜리 매수로 / 양매도 1계약당 3계약
        - 헤지목적 외에 아얘 BSH 느낌으로 추가 매매
        - 차월로 넘기는건 당장은 불필요해 보임

    - Zero Cost Butterfly
        ㅁ 구축순서 (위에부터 롱감마 ~ 숏감마 강도 순서)
            1) 안쪽 데빗 스프레드 구축 후(+10/-10/0) -> 방향성 맞는대로 크레딧 스프레드 매수 (0/-10/+10) -> 방향성 무조건 맞춰야 Zero Cost 가능...

            2) 바깥쪽 백스프레드 구축 후 (0/-5/+10) ->방향성 맞는대로 + 변동성 오르는대로 안쪽 레이쇼 스프레드 매수 (+10/-15/0) 
            -> 전적으로 변동성에 달려 있음
            -> 저변동성 국면 한정으로 실시 / 되면 좋고 안되면 Butterfly 그냥 포기
            -> 혹은 풋쪽으로 구축할때 활용

            3) 안쪽 델타중립 레이쇼 구축 후 (+10/-13~-15/0) -> 값싸진 바깥 백스프레드 (0/+7~+5/-10) 매수

            4) 바깥쪽 크레딧 스프레드 구축 후 (0/-10/+10) -> 값싸진 안쪽 데빗 스프레드 매수 (+10/-10) 
            -> 이건 월물 콘돌구조로 운용하면서 한쪽 쏠리면 거긴 개기다가 손절 치고 반대쪽은 확실히 구축

            5) 가운데 있는 매도만 구축 후 (0/-20/0) -> 값싸진 나머지 매수 실시 -> 너무 네이키드 매도... 이미 BSH 하는 마당에 여기까지 숏치면 증거금이 남아나질 않을 듯

        ㅁ 콜 vs 풋 or 둘다?

        ㅁ 적정 행사가 or 델타?

        ㅁ 근월물만 or 차월물까지


    - 112+3/6
        - 외가풋만 -n% 수익에서 청산
        - 전량손절점 : -100%
        - 풋 데빗 스프레드 수익실현 후 하향조정하는 시점

ㅇ) 추가수익원 : 위클리 0DTE 전략 (월/목에 실시)
    5-1) 과열권 크레딧 스프레드 + 50% 익절
    5-2) ?

ㅇ) 변동성 기준 전략

------------------완료) 위클리 + 특정일 진입전략의 경우
    - 월요일물 목요일물에 1/2씩 안분배분해서 진입
    - 어짜피 백테스트 결과와 상관없이 "특정 요일" 이 전략의 퍼포먼스에 영향 주면 안 됨

------------------완료) 네이키드 매도전략 크레딧 스프레드로 대체
    1) 위클리 양매도 : 
    - 동일프리미엄 수량의 콘돌로 대체
    - 목/금/월, 월/화/수에 걸쳐서 진입할때 목/월요일물은 유동성 떨어지므로 여기만 네이키드
    - 청산은 양매도 기준으로...? (양매도 청산하는 시점에 수익 미달되도 같이 청산)
    2) 먼슬리 양매도 :
    - 그냥 양매도로 하되 + 하방헤지 (차차월물 BSH)
    3) 방향성 매도_먼슬리 : 
    - 콜쪽은 동일프리미엄 콜 크레딧 스프레드로 대체
    - 풋쪽은 변동성 수준에 따라서 너무 낮으면 스프레드 / 높으면 깡매도
    4) 방향성 매도_위클리 : 
    - 동일프리미엄 수량의 크레딧 스프레드로 대체
    
------------------완료) BSH : 방법론 정립
    - 적정수량 : 월물 양매도 : 차월물 1계약당 차차월물 3/6개
    - 112 : 112 -> 115 + 6으로 커버
    - 수익실현점 : 헤지수단으로써 수익실현이 목적이기 보다는 피헤지전략 손절시 대부분 같이 청산
    - 손절 : 깡매도만 남은경우 -> 프리미엄 -x2배에 손절
    - (만일 애매하게 폭락하여 만기 직전까지 가만있는 경우) 데스밸리 손절점

-----------------완료) 백스프레드 위클리로 하는것도 테스트 -> incorporated
-----------------완료)감마 짤짤이 계열 (익절 + 손절 조정해가면서) 테스트
                      - 양매수로 테스트 했고 유의미한 전략 있으나, 크게 X
-----------------완료) 위클리로 콜매도 / 풋매도 방향성 매도 테스트 -> incorporated

ㅁ 모듈별 추후 과제

ㅇbacktest.py
    
# V 1) 각 entry 시점의 옵션데이터 불러오기
# 2) 멀티leg 전략의 chaining : 예) "델타 0.2짜리 매수 및 델타 0.2의 행사가를 기준으로 7.5pt / 15pt 동반매수" 전략의 구현
#    - 먼저 제일 첫번째 leg는 정상적으로 도출
#    - 제일 첫번째 leg 에서 도출된 moneyness + @ 값 / strike * pct 값 을 기준으로 다음 leg 의 moneyness 나 strike 도출
#    - 해당 값을 select_value 에 도입하여 나머지 leg
#  > 아예 제일 기준이 되는 leg 의 날짜를 주고, 그날 기준으로 해당 leg로부터 떨어진 정도 / 델타 정도
# 예) 7/17일 델타 20/+7.5/+15 콜버터플라이 
# 델타20은 정상적으로 구하고 -> 델타20에 해당되는 행사가 + 7.5 / +15를 스택에 쌓아놨다가 / 나머지 leg 진입할때 반영 

# V 3) 각 entry 시점 기준으로 해당 cp / exp / strike (혹은 그냥 name) 으로 정의되는 옵션데이터 만기까지 (혹은 exit 시점까지)

# V 4) 최종적으로 전기간에 걸쳐 pnl 할때 (=all_pnl) 동일종목에 대해서 같은 날 보유하고있거나 / 같은 날 어떤건 익절 , 어떤건 손절 이렇게 되는데 날짜별로 aggsum 필요
# V 5) 위 result 에서 주요 통계 (언제 어떤 이유로 stop) 등등 미리 적어놔서 통계 function 에서 바로 익절 /손절 / 만기보유 비율 계산할수 있게끔 선작업
# V 6) entry_dates 입력값이 DB상의 dtype 인 str 외에 다른 값 아무렇게나 입력해도 다 받아주게 수정
# (개발계속) 7) def_statistics : 5)번 바탕으로 통계 데이터프레임 만들기 : entry / exit / stop 만 추려서 별도의 인덱스 테이블처럼
# 8) def entry_generator : entry 조건이 복잡하니 보다 손쉽게 입력할 수 있는 wrapper 함수 생각
# V 9) 멀티전략 손익 합산해서 보여주는 방향으로 반영 
# 멀티전략의 경우 현재 apply_stop 함수로는 커버 안 됨 -> 멀티전략의 premium 딴에서부터 합산해서 하는 별개 함수 작성 필요

# 9) 현재 point 로 산출되는 손익 % 로 변경 -> 익절 손절조건도 %로 변경해서 scalability 확보
# 10) 익절손절 칠때 장중매매기준으로 하는 경우에 한해 ( = 프리미엄 매도전략들)
#  -> 매도익절의 경우 당일 저가 ~ 당일 종가 사이에 익절레벨 있으면 했다고 침
#  -> 매도손절의 경우 손실이 당일 시가

# 11) 
# 별개분석으로 진입시점 IV별로 주요 매수전략/매도전략 승률 계산해보기 : pivot
# 이것도 무작정 1:1 안되는게...  dte 낮아질수록 자연스레 프리미엄 붙으면서 뻥튀기되는게 있어서... 평소의 IV 수준과 손익비교하기 힘듬

# V 12) ## 델타와의 difference / strikie difference 기준으로 하는 애들 중에 곤란하게도 소숫점 셋째자리까지도 difference 가 일치하는 일부 경우가 포착됨 (2024-09-10 / 델타0.25 / 근월물 풋 진입시 332.5풋은 0.202 / 335풋은 0.298로 차이가 0.48로 동일
# => 쿼리문에 dense_rank() 함수를 difference 작은 순서대로 배열 후 row_number() == 1 처리해서 둘중 하나만 선택되게끔 변경

# V 13) 델타 범위를 너무 좁게 해서 dte 1~2에 주가도 200따리 가있는경우에는 커버가 안됨 (225는 델타 0.1/ 222.5 는 델타 0.43 이런 식)
# => 임의로 델타범위 목표치 +- 0.3으로 넓혀놨음

# V 14) 멀티leg 캘린더 전략의 경우 dte 기준으로 뭘 쓸지?
# => 기본적으로 가장 만기 짧은물건 만기에 다같이 청산한다는 가정 하에 dte.min(axis = 1) 처리해서 사용

# 15) 매도전략의 경우 장중 익손절 구현 : 당일 시고저종 비교해서 굳이 종가에 안 나가도 중간에 손절칠수 있었으면 그가격에 손절(익절) 나간셈 치기

# V 16) 멀티leg 전략에서 특정 leg 의 경우 어떤 기간(주로 15년 이전) 행사가 없는상황
# => 위에 join 함수에서 inner 처리하면 해당 기간 아예 없는 셈 처리

# V 17) 만기마다 손익구하는 병렬 operation -> polars 로 migrate 해서 획기적으로 속도 개선



ㅇ별개의 변동성 커브 테이블 만들기
    - 위 쿼리 살짝 수정해서 매일마다 / 근, 차월물별로 (혹은 너무 근월물로 들어오면 왜곡되므로) / 콜풋 외가격 I


새로 만들것

1. 변동성만 뽑아내서 일별로 vol curve db 만들기 => 가지고 뭔가 분석해보기 (iv_analysis.py 참고)



option_calc.py

ㅁ 스큐 / 텀 구하는 식 수정하기